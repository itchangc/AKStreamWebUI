#pragma checksum "D:\TestCode\vue\AKStreamWebUI\YiSha.Web\YiSha.Admin.Web\Areas\CameraManage\Views\VideoChannels\VideoChannelsIndex.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d1ca640cb80e72733db2c3a62b0e03f4aa387d78"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_CameraManage_Views_VideoChannels_VideoChannelsIndex), @"mvc.1.0.view", @"/Areas/CameraManage/Views/VideoChannels/VideoChannelsIndex.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
#nullable restore
#line 3 "D:\TestCode\vue\AKStreamWebUI\YiSha.Web\YiSha.Admin.Web\Areas\CameraManage\_ViewImports.cshtml"
using Microsoft.AspNetCore.Mvc.ViewFeatures;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\TestCode\vue\AKStreamWebUI\YiSha.Web\YiSha.Admin.Web\Areas\CameraManage\_ViewImports.cshtml"
using YiSha.Util;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\TestCode\vue\AKStreamWebUI\YiSha.Web\YiSha.Admin.Web\Areas\CameraManage\_ViewImports.cshtml"
using YiSha.Util.Extension;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\TestCode\vue\AKStreamWebUI\YiSha.Web\YiSha.Admin.Web\Areas\CameraManage\_ViewImports.cshtml"
using YiSha.Util.Model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\TestCode\vue\AKStreamWebUI\YiSha.Web\YiSha.Admin.Web\Areas\CameraManage\_ViewImports.cshtml"
using YiSha.Enum;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\TestCode\vue\AKStreamWebUI\YiSha.Web\YiSha.Admin.Web\Areas\CameraManage\_ViewImports.cshtml"
using YiSha.Web.Code;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d1ca640cb80e72733db2c3a62b0e03f4aa387d78", @"/Areas/CameraManage/Views/VideoChannels/VideoChannelsIndex.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e5b622e924f35698514110c8d85c04ddd5a27d39", @"/Areas/CameraManage/_ViewImports.cshtml")]
    #nullable restore
    public class Areas_CameraManage_Views_VideoChannels_VideoChannelsIndex : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\TestCode\vue\AKStreamWebUI\YiSha.Web\YiSha.Admin.Web\Areas\CameraManage\Views\VideoChannels\VideoChannelsIndex.cshtml"
  
    Layout = "~/Views/Shared/_Index.cshtml";
 

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div class=""container-div"">
    <div class=""row"">
        <div id=""searchDiv"" class=""col-sm-12 search-collapse"">
            <div class=""select-list"">
                <ul>
                    <li>
                        设备ID：<input id=""mainId"" col=""MainId"" type=""text"" />
                    </li>
                    <li>
                        <a id=""btnSearch"" class=""btn btn-primary btn-sm"" onclick=""searchGrid()""><i class=""fa fa-search""></i>&nbsp;搜索</a>
                    </li>
                </ul>
            </div>
        </div>
        <div class=""btn-group-sm hidden-xs"" id=""toolbar"">
            <a id=""btnAdd"" class=""btn btn-success"" onclick=""showSaveForm(true)""><i class=""fa fa-plus""></i> 新增</a>
            <a id=""btnEdit"" class=""btn btn-primary disabled"" onclick=""showSaveForm(false)""><i class=""fa fa-edit""></i> 修改</a>
            <a id=""btnDelete"" class=""btn btn-danger disabled"" onclick=""deleteForm()""><i class=""fa fa-remove""></i> 删除</a>
            <a id=""btnPlay"" class=""btn btn-in");
            WriteLiteral(@"fo"" onclick=""Play()""><i class=""fa fa-file-video-o""></i> 预览设备</a>
            <a id=""btnActived"" class=""btn btn-info"" onclick=""DeviceActived()""><i class=""fa fa-sign-in""></i> 激活设备</a>
        </div>
        <div class=""col-sm-12 select-table table-striped"">
            <table id=""gridTable"" data-mobile-responsive=""true""></table>
        </div>
    </div>
</div>

<script type=""text/javascript"">
    $(function () {
        initGrid();
    });

    function initGrid() {
        var queryUrl = '");
#nullable restore
#line 37 "D:\TestCode\vue\AKStreamWebUI\YiSha.Web\YiSha.Admin.Web\Areas\CameraManage\Views\VideoChannels\VideoChannelsIndex.cshtml"
                   Write(Url.Content("~/CameraManage/VideoChannels/GetPageListJson"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $('#gridTable').ysTable({
            url: queryUrl,
            columns: [
                { checkbox: true, visible: true },
                { field: 'Id', title: 'Id', visible: false },
                { field: 'MainId', title: '设备ID' },
                { field: 'MediaServerId', title: '流媒体' },
                { field: 'Vhost', title: 'Vhost', visible: false },
                { field: 'App', title: 'App', visible: false },
                { field: 'ChannelName', title: '通道名称' },
                { field: 'DepartmentId', title: '部门代码', visible: false },
                { field: 'DepartmentName', title: '部门名称', visible: false },
                { field: 'PDepartmentId', title: '上级部门代码', visible: false},
                { field: 'PDepartmentName', title: '上级部门名称', visible: false },
                { field: 'DeviceNetworkType', title: '网络类型' },
                { field: 'DeviceStreamType', title: '流类型' },
                { field: 'MethodByGetStream', title: '拉取非rtp设备的流' },
         ");
            WriteLiteral(@"       { field: 'VideoDeviceType', title: '设备类型' },
                {
                    field: 'AutoVideo', title: '自动推拉流', formatter: function (value, row, index) {
                        if (row.AutoVideo == true) {
                            return '<span class=""badge badge-primary"">' + ""启用"" + '</span>';
                        } else {
                            return '<span class=""badge badge-error"">' + ""禁用"" + '</span>';
                        }
                    }
                },
                {
                    field: 'AutoRecord', title: '自动录制计划', formatter: function (value, row, index) {
                        if (row.AutoRecord == true) {
                            return '<span class=""badge badge-primary"">' + ""启用"" + '</span>';
                        } else {
                            return '<span class=""badge badge-error"">' + ""禁用"" + '</span>';
                        }
                    }
                },
                { field: 'RecordPlanName', title");
            WriteLiteral(@": '录制计划模板名称' },
                { field: 'IpV4Address', title: 'ipv4地址' },
                { field: 'IpV6Address', title: 'ipv6地址' },
                {
                    field: 'HasPtz', title: '云台控制', formatter: function (value, row, index) {
                        if (row.HasPtz == true) {
                            return '<span class=""badge badge-primary"">' + ""启用"" + '</span>';
                        } else {
                            return '<span class=""badge badge-error"">' + ""禁用"" + '</span>';
                        }
                    }
                },
                { field: 'DeviceId', title: 'Device ID' },
                { field: 'ChannelId', title: 'Channel ID' },
                {
                    field: 'RtpWithTcp', title: 'Tcp推流', formatter: function (value, row, index) {
                        if (row.RtpWithTcp == true) {
                            return '<span class=""badge badge-primary"">' + ""启用"" + '</span>';
                        } else {
           ");
            WriteLiteral(@"                 return '<span class=""badge badge-error"">' + ""禁用"" + '</span>';
                        }
                    }
                },
                { field: 'VideoSrcUrl', title: '视频流源地址' },
                {
                    field: 'DefaultRtpPort', title: '默认rtp端口', formatter: function (value, row, index) {
                        if (row.DefaultRtpPort == true) {
                            return '<span class=""badge badge-primary"">' + ""启用"" + '</span>';
                        } else {
                            return '<span class=""badge badge-error"">' + ""禁用"" + '</span>';
                        }
                    }
                },
                {
                    field: 'Enabled', title: '是否启用', formatter: function (value, row, index) {
                        if (row.Enabled == true) {
                            return '<span class=""badge badge-primary"">' + ""启用"" + '</span>';
                        } else {
                            return '<span class=");
            WriteLiteral(@"""badge badge-error"">' + ""禁用"" + '</span>';
                        }
                    }
                },
                {
                    field: 'NoPlayerBreak', title: '无人断流', formatter: function (value, row, index) {
                        if (row.NoPlayerBreak == true) {
                            return '<span class=""badge badge-primary"">' + ""启用"" + '</span>';
                        } else {
                            return '<span class=""badge badge-error"">' + ""禁用"" + '</span>';
                        }
                    }
                },
            ],
            queryParams: function (params) {
                var pagination = $('#gridTable').ysTable('getPagination', params);
                var queryString = $('#searchDiv').getWebControls(pagination);
                return queryString;
            }
        });
    }

    function searchGrid() {
        $('#gridTable').ysTable('search');
        resetToolbarStatus();
    }

    function showSaveForm(bAdd) ");
            WriteLiteral(@"{
        var id = 0;
        if (!bAdd) {
            var selectedRow = $('#gridTable').bootstrapTable('getSelections');
            if (!ys.checkRowEdit(selectedRow)) {
                return;
            }
            else {
                id = selectedRow[0].Id;
            }
        }
        ys.openDialog({
            title: id > 0 ? '编辑' : '添加',
            content: '");
#nullable restore
#line 152 "D:\TestCode\vue\AKStreamWebUI\YiSha.Web\YiSha.Admin.Web\Areas\CameraManage\Views\VideoChannels\VideoChannelsIndex.cshtml"
                 Write(Url.Content("~/CameraManage/VideoChannels/VideoChannelsForm"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?id=' + id,
            width: '1000px',
            height: '700px',
            callback: function (index, layero) {
                var iframeWin = window[layero.find('iframe')[0]['name']];
                iframeWin.saveForm(index);
            }
        });
    }

    function deleteForm() {
        var selectedRow = $('#gridTable').bootstrapTable('getSelections');
        if (ys.checkRowDelete(selectedRow)) {
            ys.confirm('确认要删除选中的' + selectedRow.length + '条数据吗？', function () {
                var ids = ys.getIds(selectedRow);
                ys.ajax({
                    url: '");
#nullable restore
#line 168 "D:\TestCode\vue\AKStreamWebUI\YiSha.Web\YiSha.Admin.Web\Areas\CameraManage\Views\VideoChannels\VideoChannelsIndex.cshtml"
                     Write(Url.Content("~/CameraManage/VideoChannels/DeleteFormJson"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?ids=' + ids,
                    type: 'post',
                    success: function (obj) {
                        if (obj.Tag == 1) {
                            ys.msgSuccess(obj.Message);
                            searchGrid();
                        }
                        else {
                            ys.msgError(obj.Message);
                        }
                    }
                });
            });
        }
    }

    //预览设备
    function Play() {
        var selectedRow = $('#gridTable').bootstrapTable('getSelections');
        if (ys.checkRowEdit(selectedRow)) {
                    ys.openDialog({
                    title: '视频预览',
                    content: '");
#nullable restore
#line 190 "D:\TestCode\vue\AKStreamWebUI\YiSha.Web\YiSha.Admin.Web\Areas\CameraManage\Views\VideoChannels\VideoChannelsIndex.cshtml"
                         Write(Url.Content("~/CameraManage/VideoChannels/LiveVideo"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?MediaServerId=' + selectedRow[0][""MediaServerId""] + '&MainId=' + selectedRow[0][""MainId""],
                    width: '950px',
                    height: '600px',
                    callback: function (index, layero) {

                    }
                });
        }
    }
    //激活设备
    function DeviceActived() {
        var selectedRow = $('#gridTable').bootstrapTable('getSelections');
        var id = selectedRow[0].Id;
        if (ys.checkRowEdit(selectedRow)) {
                    ys.openDialog({
                    title: '设备激活',
                    content: '");
#nullable restore
#line 206 "D:\TestCode\vue\AKStreamWebUI\YiSha.Web\YiSha.Admin.Web\Areas\CameraManage\Views\VideoChannels\VideoChannelsIndex.cshtml"
                         Write(Url.Content("~/CameraManage/VideoChannels/DeviceActived"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?id=' + id,
                    width: '950px',
                    height: '800px',
                    callback: function (index, layero) {
                        var iframeWin = window[layero.find('iframe')[0]['name']];
                        iframeWin.saveForm(index);
                    }
                });
        }
    }
</script>
");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
